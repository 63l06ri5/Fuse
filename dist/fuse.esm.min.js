/**
 * Fuse.js v6.0.0-beta.1 - Lightweight fuzzy-search (http://fusejs.io)
 *
 * Copyright (c) 2020 Kiro Risk (http://kiro.me)
 * All Rights Reserved. Apache Software License 2.0
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 */
function t(t){return Array.isArray?Array.isArray(t):"[object Array]"===Object.prototype.toString.call(t)}function e(t){return"string"==typeof t}function s(t){return"number"==typeof t}function n(t){return null!=t}function i(t){return!t.trim().length}const r=Object.prototype.hasOwnProperty;class c{constructor(t){this._keys={},this._keyNames=[];let s=0;t.forEach(t=>{let n,i=1;if(e(t))n=t;else{if(!r.call(t,"name"))throw new Error("Key must contain a `name`");if(n=t.name,r.call(t,"weight")&&(i=t.weight,i<=0))throw new Error("`weight` property in key must be a positive integer")}this._keyNames.push(n),this._keys[n]={weight:i},s+=i}),this._keyNames.forEach(t=>{this._keys[t].weight/=s})}get(t,e){return this._keys[t]&&this._keys[t][e]}keys(){return this._keyNames}toJSON(){return JSON.stringify(this._keys)}}var h={isCaseSensitive:!1,includeScore:!1,keys:[],shouldSort:!0,sortFn:(t,e)=>t.score===e.score?t.idx<e.idx?-1:1:t.score<e.score?-1:1,includeMatches:!1,findAllMatches:!1,minMatchCharLength:1,location:0,threshold:.6,distance:100,...{useExtendedSearch:!1,getFn:function(i,r){let c=[],h=!1;const o=(i,r)=>{if(r){const a=r.indexOf(".");let l=r,u=null;-1!==a&&(l=r.slice(0,a),u=r.slice(a+1));const d=i[l];if(!n(d))return;if(u||!e(d)&&!s(d))if(t(d)){h=!0;for(let t=0,e=d.length;t<e;t+=1)o(d[t],u)}else u&&o(d,u);else c.push(function(t){return null==t?"":function(t){if("string"==typeof t)return t;let e=t+"";return"0"==e&&1/t==-1/0?"-0":e}(t)}(d))}else c.push(i)};return o(i,r),h?c:c[0]}}};const o=/[^ ]+/g;class a{constructor({getFn:t=h.getFn}={}){this.norm=function(t=3){const e=new Map;return{get(s){const n=s.match(o).length;if(e.has(n))return e.get(n);const i=parseFloat((1/Math.sqrt(n)).toFixed(t));return e.set(n,i),i},clear(){e.clear()}}}(3),this.getFn=t,this.isCreated=!1,this.setRecords()}setCollection(t=[]){this.docs=t}setRecords(t=[]){this.records=t}setKeys(t=[]){this.keys=t}create(){!this.isCreated&&this.docs.length&&(this.isCreated=!0,e(this.docs[0])?this.docs.forEach((t,e)=>{this._addString(t,e)}):this.docs.forEach((t,e)=>{this._addObject(t,e)}),this.norm.clear())}add(t){const s=this.size();e(t)?this._addString(t,s):this._addObject(t,s)}removeAt(t){this.records.splice(t,1);for(let e=t,s=this.size();e<s;e+=1)this.records[e].i-=1}size(){return this.records.length}_addString(t,e){if(!n(t)||i(t))return;let s={v:t,i:e,n:this.norm.get(t)};this.records.push(s)}_addObject(s,r){let c={i:r,$:{}};this.keys.forEach((r,h)=>{let o=this.getFn(s,r);if(n(o))if(t(o)){let s=[];const r=[{nestedArrIndex:-1,value:o}];for(;r.length;){const{nestedArrIndex:c,value:h}=r.pop();if(n(h))if(e(h)&&!i(h)){let t={v:h,i:c,n:this.norm.get(h)};s.push(t)}else t(h)&&h.forEach((t,e)=>{r.push({nestedArrIndex:e,value:t})})}c.$[h]=s}else if(!i(o)){let t={v:o,n:this.norm.get(o)};c.$[h]=t}}),this.records.push(c)}toJSON(){return{keys:this.keys,records:this.records}}}function l(t,e,{getFn:s=h.getFn}={}){let n=new a({getFn:s});return n.setKeys(t),n.setCollection(e),n.create(),n}function u(t,e){const s=t.matches;if(e.matches=[],n(s))for(let t=0,i=s.length;t<i;t+=1){let i=s[t];if(!n(i.indices)||0===i.indices.length)continue;const{indices:r,value:c}=i;let h={indices:r,value:c};i.key&&(h.key=i.key),i.idx>-1&&(h.refIndex=i.idx),e.matches.push(h)}}function d(t,e){e.score=t.score}function f(t,{errors:e=0,currentLocation:s=0,expectedLocation:n=0,distance:i=h.distance}={}){const r=e/t.length,c=Math.abs(n-s);return i?r+c/i:c?1:r}function g(t,e,s,{location:n=h.location,distance:i=h.distance,threshold:r=h.threshold,findAllMatches:c=h.findAllMatches,minMatchCharLength:o=h.minMatchCharLength,includeMatches:a=h.includeMatches}={}){if(e.length>32)throw new Error("Pattern length exceeds max of 32.");const l=e.length,u=t.length,d=Math.max(0,Math.min(n,u));let g=r,p=d;const M=[];if(a)for(let t=0;t<u;t+=1)M[t]=0;let m;for(;(m=t.indexOf(e,p))>-1;){let t=f(e,{currentLocation:m,expectedLocation:d,distance:i});if(g=Math.min(t,g),p=m+l,a){let t=0;for(;t<l;)M[m+t]=1,t+=1}}p=-1;let y=[],x=1,k=l+u;const _=1<<(l<=31?l-1:30);for(let n=0;n<l;n+=1){let r=0,h=k;for(;r<h;){f(e,{errors:n,currentLocation:d+h,expectedLocation:d,distance:i})<=g?r=h:k=h,h=Math.floor((k-r)/2+r)}k=h;let o=Math.max(1,d-h+1),m=c?u:Math.min(d+h,u)+l,v=Array(m+2);v[m+1]=(1<<n)-1;for(let r=m;r>=o;r-=1){let c=r-1,h=s[t.charAt(c)];if(h&&a&&(M[c]=1),v[r]=(v[r+1]<<1|1)&h,0!==n&&(v[r]|=(y[r+1]|y[r])<<1|1|y[r+1]),v[r]&_&&(x=f(e,{errors:n,currentLocation:c,expectedLocation:d,distance:i}),x<=g)){if(g=x,p=c,p<=d)break;o=Math.max(1,2*d-p)}}if(f(e,{errors:n+1,currentLocation:d,expectedLocation:d,distance:i})>g)break;y=v}let v={isMatch:p>=0,score:Math.max(.001,x)};return a&&(v.indices=function(t=[],e=h.minMatchCharLength){let s=[],n=-1,i=-1,r=0;for(let c=t.length;r<c;r+=1){let c=t[r];c&&-1===n?n=r:c||-1===n||(i=r-1,i-n+1>=e&&s.push([n,i]),n=-1)}return t[r-1]&&r-n>=e&&s.push([n,r-1]),s}(M,o)),v}function p(t){let e={},s=t.length;for(let n=0;n<s;n+=1)e[t.charAt(n)]=0;for(let n=0;n<s;n+=1)e[t.charAt(n)]|=1<<s-n-1;return e}class M{constructor(t,{location:e=h.location,threshold:s=h.threshold,distance:n=h.distance,includeMatches:i=h.includeMatches,findAllMatches:r=h.findAllMatches,minMatchCharLength:c=h.minMatchCharLength,isCaseSensitive:o=h.isCaseSensitive}={}){this.options={location:e,threshold:s,distance:n,includeMatches:i,findAllMatches:r,minMatchCharLength:c,isCaseSensitive:o},this.pattern=o?t:t.toLowerCase(),this.chunks=[];let a=0;for(;a<this.pattern.length;){let t=this.pattern.substring(a,a+32);this.chunks.push({pattern:t,alphabet:p(t)}),a+=32}}searchIn(t){const{isCaseSensitive:e,includeMatches:s}=this.options;if(e||(t=t.toLowerCase()),this.pattern===t){let e={isMatch:!0,score:0};return s&&(e.indices=[[0,t.length-1]]),e}const{location:n,distance:i,threshold:r,findAllMatches:c,minMatchCharLength:h}=this.options;let o=[],a=0,l=!1;this.chunks.forEach(({pattern:e,alphabet:u},d)=>{const{isMatch:f,score:p,indices:M}=g(t,e,u,{location:n+32*d,distance:i,threshold:r,findAllMatches:c,minMatchCharLength:h,includeMatches:s});f&&(l=!0),a+=p,f&&M&&(o=[...o,...M])});let u={isMatch:l,score:l?a/this.chunks.length:1};return l&&s&&(u.indices=o),u}}class m{constructor(t){this.pattern=t}static isMultiMatch(t){return y(t,this.multiRegex)}static isSingleMatch(t){return y(t,this.singleRegex)}search(){}}function y(t,e){const s=t.match(e);return s?s[1]:null}class x extends m{constructor(t){super(t)}static get type(){return"exact"}static get multiRegex(){return/^'"(.*)"$/}static get singleRegex(){return/^'(.*)$/}search(t){let e,s=0;const n=[],i=this.pattern.length;for(;(e=t.indexOf(this.pattern,s))>-1;)s=e+i,n.push([e,s-1]);const r=!!n.length;return{isMatch:r,score:r?1:0,indices:n}}}class k extends m{constructor(t,{location:e=h.location,threshold:s=h.threshold,distance:n=h.distance,includeMatches:i=h.includeMatches,findAllMatches:r=h.findAllMatches,minMatchCharLength:c=h.minMatchCharLength,isCaseSensitive:o=h.isCaseSensitive}={}){super(t),this._bitapSearch=new M(t,{location:e,threshold:s,distance:n,includeMatches:i,findAllMatches:r,minMatchCharLength:c,isCaseSensitive:o})}static get type(){return"fuzzy"}static get multiRegex(){return/^"(.*)"$/}static get singleRegex(){return/^(.*)$/}search(t){return this._bitapSearch.searchIn(t)}}const _=[x,class extends m{constructor(t){super(t)}static get type(){return"prefix-exact"}static get multiRegex(){return/^\^"(.*)"$/}static get singleRegex(){return/^\^(.*)$/}search(t){const e=t.startsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,this.pattern.length-1]}}},class extends m{constructor(t){super(t)}static get type(){return"inverse-prefix-exact"}static get multiRegex(){return/^!\^"(.*)"$/}static get singleRegex(){return/^!\^(.*)$/}search(t){const e=!t.startsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,t.length-1]}}},class extends m{constructor(t){super(t)}static get type(){return"inverse-suffix-exact"}static get multiRegex(){return/^!"(.*)"\$$/}static get singleRegex(){return/^!(.*)\$$/}search(t){const e=!t.endsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,t.length-1]}}},class extends m{constructor(t){super(t)}static get type(){return"suffix-exact"}static get multiRegex(){return/^"(.*)"\$$/}static get singleRegex(){return/^(.*)\$$/}search(t){const e=t.endsWith(this.pattern);return{isMatch:e,score:e?0:1,indices:[t.length-this.pattern.length,t.length-1]}}},class extends m{constructor(t){super(t)}static get type(){return"inverse-exact"}static get multiRegex(){return/^!"(.*)"$/}static get singleRegex(){return/^!(.*)$/}search(t){const e=-1===t.indexOf(this.pattern);return{isMatch:e,score:e?0:1,indices:[0,t.length-1]}}},k],v=_.length,S=/ +(?=([^\"]*\"[^\"]*\")*[^\"]*$)/;const C=new Set([k.type,x.type]);const L=[];function w(t,e){for(let s=0,n=L.length;s<n;s+=1){let n=L[s];if(n.condition(t,e))return new n(t,e)}return new M(t,e)}const A="$and",b="$or",$=t=>!(!t[A]&&!t[b]),E=t=>({[A]:Object.keys(t).map(e=>({[e]:t[e]}))});function I(s,n,{auto:i=!0}={}){const r=s=>{let c=Object.keys(s);if(c.length>1&&!$(s))return r(E(s));let h=c[0];if((e=>!t(e)&&"object"==typeof e&&!$(e))(s)){const t=s[h];if(!e(t))throw new Error(`Invalid value for key "${h}"`);const r={key:h,pattern:t};return i&&(r.searcher=w(t,n)),r}let o={children:[],operator:h};return c.forEach(e=>{const n=s[e];t(n)&&n.forEach(t=>{o.children.push(r(t))})}),o};return $(s)||(s=E(s)),r(s)}class O{constructor(t,e={},s){this.options={...h,...e},this._keyStore=new c(this.options.keys),this.setCollection(t,s)}setCollection(t,e){if(this._docs=t,e&&!(e instanceof a))throw new Error("Incorrect `index` type");this._myIndex=e||l(this._keyStore.keys(),this._docs,{getFn:this.options.getFn})}add(t){n(t)&&(this._docs.push(t),this._myIndex.add(t))}removeAt(t){this._docs.splice(t,1),this._myIndex.removeAt(t)}getIndex(){return this._myIndex}search(t,{limit:n=-1}={}){const{includeMatches:i,includeScore:r,shouldSort:c,sortFn:o}=this.options;let a=e(t)?e(this._docs[0])?this._searchStringList(t):this._searchObjectList(t):this._searchLogical(t);return function(t,e){t.forEach(t=>{let s=1;t.matches.forEach(({key:t,norm:n,score:i})=>{const r=e.get(t,"weight");s*=Math.pow(0===i&&r?Number.EPSILON:i,(r||1)*n)}),t.score=s})}(a,this._keyStore),c&&a.sort(o),s(n)&&n>-1&&(a=a.slice(0,n)),function(t,e,{includeMatches:s=h.includeMatches,includeScore:n=h.includeScore}={}){const i=[];s&&i.push(u);n&&i.push(d);return t.map(t=>{const{idx:s}=t,n={item:e[s],refIndex:s};return i.length&&i.forEach(e=>{e(t,n)}),n})}(a,this._docs,{includeMatches:i,includeScore:r})}_searchStringList(t){const e=w(t,this.options),{records:s}=this._myIndex,i=[];return s.forEach(({v:t,i:s,n:r})=>{if(!n(t))return;const{isMatch:c,score:h,indices:o}=e.searchIn(t);c&&i.push({item:t,idx:s,matches:[{score:h,value:t,norm:r,indices:o}]})}),i}_searchLogical(t){const e=I(t,this.options),{keys:s,records:i}=this._myIndex,r={},c=[],h=(t,e,n)=>{if(!t.children){const{key:n,searcher:i}=t,r=e[s.indexOf(n)];return this._findMatches({key:n,value:r,searcher:i})}{const s=t.operator;let i=[];for(let r=0;r<t.children.length;r+=1){let c=t.children[r],o=h(c,e,n);if(o&&o.length){if(i.push({idx:n,item:e,matches:o}),s===b)break}else if(s===A){i.length=0;break}}i.length&&(r[n]||(r[n]={idx:n,item:e,matches:[]},c.push(r[n])),i.forEach(({matches:t})=>{r[n].matches.push(...t)}))}};return i.forEach(({$:t,i:s})=>{n(t)&&h(e,t,s)}),c}_searchObjectList(t){const e=w(t,this.options),{keys:s,records:i}=this._myIndex,r=[];return i.forEach(({$:t,i:i})=>{if(!n(t))return;let c=[];s.forEach((s,n)=>{c.push(...this._findMatches({key:s,value:t[n],searcher:e}))}),c.length&&r.push({idx:i,item:t,matches:c})}),r}_findMatches({key:e,value:s,searcher:i}){if(!n(s))return[];let r=[];if(t(s))s.forEach(({v:t,i:s,n:c})=>{if(!n(t))return;const{isMatch:h,score:o,indices:a}=i.searchIn(t);h&&r.push({score:o,key:e,value:t,idx:s,norm:c,indices:a})});else{const{v:t,n:n}=s,{isMatch:c,score:h,indices:o}=i.searchIn(t);c&&r.push({score:h,key:e,value:t,norm:n,indices:o})}return r}}O.version="6.0.0-beta.1",O.createIndex=l,O.parseIndex=function(t,{getFn:e=h.getFn}={}){const{keys:s,records:n}=t;let i=new a({getFn:e});return i.setKeys(s),i.setRecords(n),i},O.config=h,function(...t){L.push(...t)}(class{constructor(t,{isCaseSensitive:e=h.isCaseSensitive,includeMatches:s=h.includeMatches,minMatchCharLength:n=h.minMatchCharLength,findAllMatches:i=h.findAllMatches,location:r=h.location,threshold:c=h.threshold,distance:o=h.distance}={}){this.query=null,this.options={isCaseSensitive:e,includeMatches:s,minMatchCharLength:n,findAllMatches:i,location:r,threshold:c,distance:o},this.pattern=e?t:t.toLowerCase(),this.query=function(t,e={}){return t.split("|").map(t=>{let s=t.trim().split(S).filter(t=>t&&!!t.trim()),n=[];for(let t=0,i=s.length;t<i;t+=1){const i=s[t];let r=!1,c=-1;for(;!r&&++c<v;){const t=_[c];let s=t.isMultiMatch(i);s&&(n.push(new t(s,e)),r=!0)}if(!r)for(c=-1;++c<v;){const t=_[c];let s=t.isSingleMatch(i);if(s){n.push(new t(s,e));break}}}return n})}(this.pattern,this.options)}static condition(t,e){return e.useExtendedSearch}searchIn(t){const e=this.query;if(!e)return{isMatch:!1,score:1};const{includeMatches:s,isCaseSensitive:n}=this.options;t=n?t:t.toLowerCase();let i=0,r=[],c=0;for(let n=0,h=e.length;n<h;n+=1){const h=e[n];r.length=0,i=0;for(let e=0,n=h.length;e<n;e+=1){const n=h[e],{isMatch:o,indices:a,score:l}=n.search(t);if(!o){c=0,i=0,r.length=0;break}if(i+=1,c+=l,s){const t=n.constructor.type;C.has(t)?r=[...r,...a]:r.push(a)}}if(i){let t={isMatch:!0,score:c/i};return s&&(t.indices=r),t}}return{isMatch:!1,score:1}}});export default O;